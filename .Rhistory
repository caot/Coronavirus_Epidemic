xlab="Date", ylab="Delta", ylim=c(-1700,-700)))
title(main="Actual Infected Cases minus Model Prediction")
mtext(text="negative ==> actual less than prediction", side=3)
axis(1, dat1$date, format(dat1$date, "%b %d"), cex.axis=1 )
par(new = T)
with(dat1, plot(date, delta_pct, type="b", col="red3", pch=1,
axes=F, xlab=NA, ylab=NA, cex=2))
axis(side = 4)
mtext(side = 4, line = 3, 'percentage')
legend("topleft",
legend=c("Delta", "percent"),
lty=c(1,1), pch=c(16, 1), col=c("black", "red3"))
X11()
par(mar = c(5,5,5,5))
with(dat1, plot(date, delta, type="b", col="black", pch=16, cex=2, xaxt="n",
xlab="Date", ylab="Delta", ylim=c(-1700,-700)))
title(main="Actual Infected Cases minus Model Prediction")
mtext(text="negative ==> actual less than prediction", side=3, line=1)
axis(1, dat1$date, format(dat1$date, "%b %d"), cex.axis=1 )
par(new = T)
with(dat1, plot(date, delta_pct, type="b", col="red3", pch=1,
axes=F, xlab=NA, ylab=NA, cex=2))
axis(side = 4)
mtext(side = 4, line = 3, 'percentage')
legend("topleft",
legend=c("Delta", "percent"),
lty=c(1,1), pch=c(16, 1), col=c("black", "red3"))
fnm = "/actual-vs-predict.png"
full_path = paste(home, fnm, sep="")
png(full_path, width=680, height=480)
par(mar = c(5,5,5,5))
with(dat1, plot(date, delta, type="b", col="black", pch=16, cex=2, xaxt="n",
xlab="Date", ylab="Delta", ylim=c(-1700,-700)))
title(main="Actual Infected Cases minus Model Prediction")
mtext(text="negative ==> actual less than prediction", side=3, line=1)
axis(1, dat1$date, format(dat1$date, "%b %d"), cex.axis=1 )
par(new = T)
with(dat1, plot(date, delta_pct, type="b", col="red3", pch=1,
axes=F, xlab=NA, ylab=NA, cex=2))
axis(side = 4)
mtext(side = 4, line = 3, 'percentage')
legend("topleft",
legend=c("Delta", "percent"),
lty=c(1,1), pch=c(16, 1), col=c("black", "red3"))
dev.off()
png(full_path, width=680, height=480)
par(mar = c(5,5,5,5))
with(dat1, plot(date, delta, type="b", col="black", pch=16, cex=2, xaxt="n",
xlab="Date", ylab="Delta", ylim=c(-1700,0)))
title(main="Actual Infected Cases minus Model Prediction")
mtext(text="negative ==> actual less than prediction", side=3, line=1)
axis(1, dat1$date, format(dat1$date, "%b %d"), cex.axis=1 )
par(new = T)
with(dat1, plot(date, delta_pct, type="b", col="red3", pch=1,
axes=F, xlab=NA, ylab=NA, cex=2))
axis(side = 4)
mtext(side = 4, line = 3, 'percentage')
legend("topleft",
legend=c("Delta", "percent"),
lty=c(1,1), pch=c(16, 1), col=c("black", "red3"))
dev.off()
png(full_path, width=680, height=480)
par(mar = c(5,5,5,5))
with(dat1, plot(date, delta, type="b", col="black", pch=16, cex=2, xaxt="n",
xlab="Date", ylab="Delta", ylim=c(-1700,0)))
title(main="Actual Infected Cases minus Model Prediction")
mtext(text="negative ==> actual less than prediction", side=3, line=1)
axis(1, dat1$date, format(dat1$date, "%b %d"), cex.axis=1 )
par(new = T)
with(dat1, plot(date, delta_pct, type="b", col="red3", pch=1,
axes=F, xlab=NA, ylab=NA, cex=2, ylim=c(-16,0)))
axis(side = 4)
mtext(side = 4, line = 3, 'percentage')
legend("topleft",
legend=c("Delta", "percent"),
lty=c(1,1), pch=c(16, 1), col=c("black", "red3"))
dev.off()
fnm = "/actual-vs-predict.png"
full_path = paste(home, fnm, sep="")
png(full_path, width=680, height=480)
par(mar = c(5,5,5,5))
with(dat1, plot(date, delta, type="b", col="black", pch=16, cex=2, xaxt="n",
xlab="Date", ylab="Delta", ylim=c(-1700,0)))
title(main="Fig. 1 Actual Infected Cases minus Model Prediction")
mtext(text="negative ==> actual less than prediction", side=3, line=1)
axis(1, dat1$date, format(dat1$date, "%b %d"), cex.axis=1 )
par(new = T)
with(dat1, plot(date, delta_pct, type="b", col="red3", pch=1,
axes=F, xlab=NA, ylab=NA, cex=2, ylim=c(-16,0)))
axis(side = 4)
mtext(side = 4, line = 3, 'percentage')
legend("topleft",
legend=c("Delta", "percent"),
lty=c(1,1), pch=c(16, 1), col=c("black", "red3"))
dev.off()
?text
getwd()
if ( file.exists("CoronaV.RData") ) load("CoronaV.RData")
rm(data_path, plot_path, csv_file, dat, model, forecast.df, last.t, latest.date)
ls()
Model_param
Model_param = Model_param[[1:6]]
Model_param = Model_param[[c(1:6)]]
length(Model_param)
Model_param = Model_param[[c(1,2,3,4,5,6)]]
Model_param = Model_param[1:6]
Model_param
ls()
Daily_updates
Daily_updates = Daily_updates[1:6,]
Daily_updates
ls()
save.image("CoronaV.RData")
home = getwd()
home
data_path = paste(home,  "/data/", sep="")
plot_path = paste(home,  "/plots/", sep="")
csv_file = "actual-vs-predict.csv"
full_path = paste(data_path, csv_file, sep="")
dat1 = read.csv(full_path, header=TRUE, stringsAsFactors=FALSE)
dat1[,"date"] = as.Date(dat1[,"date"], format="%Y-%m-%d")
dat1
fnm = "/actual-vs-predict.png"
full_path = paste(home, fnm, sep="")
png(full_path, width=680, height=480)
par(mar = c(5,5,5,5))
with(dat1, plot(date, delta, type="b", col="black", pch=16, cex=2, xaxt="n",
xlab="Date", ylab="Delta", ylim=c(-1700,0)))
title(main="Fig. 1 Actual Infected Cases minus Model Prediction")
mtext(text="negative ==> actual less than prediction", side=3, line=1)
axis(1, dat1$date, format(dat1$date, "%b %d"), cex.axis=1 )
par(new = T)
with(dat1, plot(date, delta_pct, type="b", col="red3", pch=1,
axes=F, xlab=NA, ylab=NA, cex=2, ylim=c(-16,0)))
axis(side = 4)
mtext(side = 4, line = 3, 'percentage')
legend("topleft",
legend=c("Delta", "percent"),
lty=c(1,1), pch=c(16, 1), col=c("black", "red3"))
dev.off()
getwd()
if ( file.exists("CoronaV.RData") ) load("CoronaV.RData")
rm(data_path, plot_path, csv_file, dat, model, forecast.df, last.t, latest.date)
ls()
Daily_updates
home = getwd()
cat("home : ", home)
data_path = paste(home,  "/data/", sep="")
plot_path = paste(home,  "/plots/", sep="")
csv_file = "corona_data.csv"
full_path = paste(data_path, csv_file, sep="")
cat("csv full path : ", full_path)
# override dat with the latest data
dat = read.csv(full_path, header=TRUE, stringsAsFactors=FALSE)
dat = dat[9:nrow(dat),]
dat[,"t"] = 1:nrow(dat)
dat[,"date"] = as.Date(dat[,"date"], format="%Y-%m-%d")
cat("====== Data ============================ \n")
dat
# ==== Estimate starting parameters ===================================
# Initial intercept must be less than min(y) and greater than zero
init_intcpt = min(dat[,"confirmed"]) / 2
# Estimate other parameters using a linear model
model0 = lm(log(confirmed - init_intcpt)~t, data=dat)
alpha0 = exp(coef(model0)[1])
beta0 = coef(model0)[2]
init_param = list(alpha=alpha0, beta=beta0, intcpt=init_intcpt)
cat("===== Starting parameters =============================== \n")
init_param
# ==== Fit model ==============================================
model = nls(confirmed ~ alpha*exp(beta*t) + intcpt , data=dat, start=init_param)
res = summary(model)
res
latest.date = as.character(dat[nrow(dat), "date"])
latest.date
Model_param
res
Daily_updates
# ==== Prediction =================================
last.t = tail(dat[,"t"],1)
forecast.df = data.frame(matrix(NA, nrow=3, ncol=ncol(dat)))
# ==== Prediction =================================
if ( !exists("Forecast") ) Forecast = list()
Forecast
forecast.df = data.frame(matrix(NA, nrow=3, ncol=ncol(dat)))
colnames(forecast.df) = colnames(dat)
last.t
dat
dte = dat[nrow(dat), "date"] + 1:3
dte
forecast.df[1:3,"date"] = dte
forecast.df[,"date"] = as.Date(forecast.df[,"date"], origin="1970-01-01")
forecast.df[,"t"] = last.t + 1:3
forecast.df
pred = predict(model, newdata=forecast.df, se.fit = TRUE, level=0.95)
pred
forecast.df[,"confirmed"] = pred
forecast.df
Forecast[[length(Forecast)+1]] = forecast.df
Forecast
df = rbind(dat, forecast.df)
dat
# ==== linear model ===================================
dat2 = dat[12:18,]
dat2
?glm
model2 = glm(confirmed ~ t, family=gaussian, data=dat2)
summary(model2)
forecast.df
AIC(model)
AIC(model2)
model11 = nls(confirmed ~ alpha*exp(beta*t) + intcpt , data=dat2, start=init_param)
summary(model11)
AIC(model11)
summary(model)
forecast2.df = data.frame(matrix(NA, nrow=3, ncol=ncol(dat2)))
forecast2.df
colnames(forecast2.df) = colnames(dat2)
forecast2.df[1:3,"date"] = dte
forecast2.df
forecast2.df[,"date"] = as.Date(forecast2.df[,"date"], origin="1970-01-01")
forecast2.df[,"t"] = last.t + 1:3
forecast2.df
pred2 = predict(model2, newdata=forecast2.df)
pred2
dat2
forecast.df
forecast2.df[,"confirmed"] = pred
if ( !exists("Forecast2") ) Forecast2 = list()
Forecast2
Forecast2[[length(Forecast2)+1]] = forecast2.df
Forecast2
df2 = rbind(dat2, forecast2.df)
fnm = paste("daily-linear-prediction-", latest.date, ".png",  sep="")
full_path = paste(plot_path, fnm, sep="")
png(full_path)
plot(df2[,"t"], df2[,"confirmed"], type="b",
xlab="Date", ylab="No of confirmed cases",
main="Fig. 2 Coronvirus Confirmed Cases and Predictions (linear model)")
abline(v=last.t, col="grey", lwd=2)
grid(NA, 10, lwd = 2)
text(x=last.t, y=100, labels=latest.date, pos=3, col="blue", cex=1)
txt = c(paste(as.character(forecast2.df[1,"date"]), round(forecast2.df[1,"confirmed"],0), sep=" : "),
paste(as.character(forecast2.df[2,"date"]), round(forecast2.df[2,"confirmed"],0), sep=" : "))
hgt = max(df2[,"confirmed"])
text(x=1, y=c(hgt*0.9, hgt*0.8), labels=txt, pos=4, col="red", cex=2)
text(x=last.t+0.2, y=15000, labels="Forecast", pos=4, col="red4", cex=1)
text(x=last.t-1, y=15000, labels="Actual", pos=2, col="red4", cex=1)
dev.off()
df2
forecast2.df = data.frame(matrix(NA, nrow=3, ncol=ncol(dat2)))
colnames(forecast2.df) = colnames(dat2)
forecast2.df[1:3,"date"] = dte
forecast2.df[,"date"] = as.Date(forecast2.df[,"date"], origin="1970-01-01")
forecast2.df[,"t"] = last.t + 1:3
pred2 = predict(model2, newdata=forecast2.df)
forecast2.df[,"confirmed"] = pred2
rm(Forecast2)
if ( !exists("Forecast2") ) Forecast2 = list()
Forecast2[[length(Forecast2)+1]] = forecast2.df
df2 = rbind(dat2, forecast2.df)
fnm = paste("daily-linear-prediction-", latest.date, ".png",  sep="")
full_path = paste(plot_path, fnm, sep="")
png(full_path)
plot(df2[,"t"], df2[,"confirmed"], type="b",
xlab="Date", ylab="No of confirmed cases",
main="Fig. 2 Coronvirus Confirmed Cases and Predictions (linear model)")
abline(v=last.t, col="grey", lwd=2)
grid(NA, 10, lwd = 2)
text(x=last.t, y=100, labels=latest.date, pos=3, col="blue", cex=1)
txt = c(paste(as.character(forecast2.df[1,"date"]), round(forecast2.df[1,"confirmed"],0), sep=" : "),
paste(as.character(forecast2.df[2,"date"]), round(forecast2.df[2,"confirmed"],0), sep=" : "))
hgt = max(df2[,"confirmed"])
text(x=1, y=c(hgt*0.9, hgt*0.8), labels=txt, pos=4, col="red", cex=2)
text(x=last.t+0.2, y=15000, labels="Forecast", pos=4, col="red4", cex=1)
text(x=last.t-1, y=15000, labels="Actual", pos=2, col="red4", cex=1)
dev.off()
hgt
df2
hgt
hgt*0.9
hgt*0.8
png(full_path)
plot(df2[,"t"], df2[,"confirmed"], type="b",
xlab="Date", ylab="No of confirmed cases",
main="Fig. 2 Coronvirus Confirmed Cases and Predictions (linear model)")
abline(v=last.t, col="grey", lwd=2)
grid(NA, 10, lwd = 2)
text(x=last.t, y=100, labels=latest.date, pos=3, col="blue", cex=1)
txt = c(paste(as.character(forecast2.df[1,"date"]), round(forecast2.df[1,"confirmed"],0), sep=" : "),
paste(as.character(forecast2.df[2,"date"]), round(forecast2.df[2,"confirmed"],0), sep=" : "))
hgt = max(df2[,"confirmed"])
text(x=min(df2[,"t"]), y=c(hgt*0.9, hgt*0.8), labels=txt, pos=4, col="red", cex=2)
text(x=last.t+0.2, y=15000, labels="Forecast", pos=4, col="red4", cex=1)
text(x=last.t-1, y=15000, labels="Actual", pos=2, col="red4", cex=1)
dev.off()
png(full_path)
plot(df2[,"t"], df2[,"confirmed"], type="b",
xlab="Date", ylab="No of confirmed cases",
main="Fig. 4 Coronvirus Confirmed Cases and Predictions (linear model)")
abline(v=last.t, col="grey", lwd=2)
grid(NA, 10, lwd = 2)
text(x=last.t, y=100, labels=latest.date, pos=3, col="blue", cex=1)
txt = c(paste(as.character(forecast2.df[1,"date"]), round(forecast2.df[1,"confirmed"],0), sep=" : "),
paste(as.character(forecast2.df[2,"date"]), round(forecast2.df[2,"confirmed"],0), sep=" : "))
hgt = max(df2[,"confirmed"])
text(x=min(df2[,"t"]), y=c(hgt*0.9, hgt*0.8), labels=txt, pos=4, col="red", cex=2)
text(x=last.t+0.2, y=15000, labels="Forecast", pos=4, col="red4", cex=1)
text(x=last.t-1, y=15000, labels="Actual", pos=2, col="red4", cex=1)
dev.off()
if ( file.exists("CoronaV.RData") ) load("CoronaV.RData")
ls()
rm(data_path, plot_path, csv_file, dat, model, forecast.df, last.t, latest.date)
Daily_updates
Forecast
home = getwd()
cat("home : ", home)
data_path = paste(home,  "/data/", sep="")
plot_path = paste(home,  "/plots/", sep="")
csv_file = "corona_data.csv"
full_path = paste(data_path, csv_file, sep="")
cat("csv full path : ", full_path)
# override dat with the latest data
dat = read.csv(full_path, header=TRUE, stringsAsFactors=FALSE)
dat = dat[9:nrow(dat),]
dat[,"t"] = 1:nrow(dat)
dat[,"date"] = as.Date(dat[,"date"], format="%Y-%m-%d")
cat("====== Data ============================ \n")
dat
# ==== Estimate starting parameters ===================================
# Initial intercept must be less than min(y) and greater than zero
init_intcpt = min(dat[,"confirmed"]) / 2
# Estimate other parameters using a linear model
model0 = lm(log(confirmed - init_intcpt)~t, data=dat)
alpha0 = exp(coef(model0)[1])
beta0 = coef(model0)[2]
init_param = list(alpha=alpha0, beta=beta0, intcpt=init_intcpt)
cat("===== Starting parameters =============================== \n")
init_param
# ==== Fit model ==============================================
model = nls(confirmed ~ alpha*exp(beta*t) + intcpt , data=dat, start=init_param)
res = summary(model)
cat("===== Model summary ====================================== \n")
res
ls()
Model_param
latest.date = as.character(dat[nrow(dat), "date"])
length(Forecast)
# ==== linear model ===================================
dat2 = dat[12:nrow(dat),]
model2 = glm(confirmed ~ t, family=gaussian, data=dat2)
summary(model2)
forecast2.df = data.frame(matrix(NA, nrow=3, ncol=ncol(dat2)))
colnames(forecast2.df) = colnames(dat2)
forecast2.df[1:3,"date"] = dte
last.t = tail(dat[,"t"],1)
forecast.df = data.frame(matrix(NA, nrow=3, ncol=ncol(dat)))
colnames(forecast.df) = colnames(dat)
dte = dat[nrow(dat), "date"] + 1:3
forecast.df[1:3,"date"] = dte
forecast.df[,"date"] = as.Date(forecast.df[,"date"], origin="1970-01-01")
forecast.df[,"t"] = last.t + 1:3
forecast.df
pred = predict(model, newdata=forecast.df, se.fit = TRUE, level=0.95)
pred
forecast.df[,"confirmed"] = pred
forecast.df
# ==== linear model ===================================
dat2 = dat[12:nrow(dat),]
model2 = glm(confirmed ~ t, family=gaussian, data=dat2)
summary(model2)
forecast2.df = data.frame(matrix(NA, nrow=3, ncol=ncol(dat2)))
colnames(forecast2.df) = colnames(dat2)
forecast2.df[1:3,"date"] = dte
forecast2.df[,"date"] = as.Date(forecast2.df[,"date"], origin="1970-01-01")
forecast2.df[,"t"] = last.t + 1:3
pred2 = predict(model2, newdata=forecast2.df)
pred2
forecast2.df[,"confirmed"] = pred2
Forecast2
Forecast2 = list()
Forecast2[[length(Forecast2)+1]] = forecast2.df
df2 = rbind(dat2, forecast2.df)
fnm = paste("daily-linear-prediction-", latest.date, ".png",  sep="")
full_path = paste(plot_path, fnm, sep="")
png(full_path)
plot(df2[,"t"], df2[,"confirmed"], type="b",
xlab="Date", ylab="No of confirmed cases",
main="Fig. 4 Coronvirus Confirmed Cases and Predictions (linear model)")
abline(v=last.t, col="grey", lwd=2)
grid(NA, 10, lwd = 2)
text(x=last.t, y=100, labels=latest.date, pos=3, col="blue", cex=1)
txt = c(paste(as.character(forecast2.df[1,"date"]), round(forecast2.df[1,"confirmed"],0), sep=" : "),
paste(as.character(forecast2.df[2,"date"]), round(forecast2.df[2,"confirmed"],0), sep=" : "))
hgt = max(df2[,"confirmed"])
text(x=min(df2[,"t"]), y=c(hgt*0.9, hgt*0.8), labels=txt, pos=4, col="red", cex=2)
text(x=last.t+0.2, y=15000, labels="Forecast", pos=4, col="red4", cex=1)
text(x=last.t-1, y=15000, labels="Actual", pos=2, col="red4", cex=1)
dev.off()
ls()
rm(Forecast)
rm(Forecast2)
rm(forecast.df)
rm(forecast2.df)
# save everything to RData file
save.image("CoronaV.RData")
csv_file = "actual-vs-predict.csv"
full_path = paste(data_path, csv_file, sep="")
dat1 = read.csv(full_path, header=TRUE, stringsAsFactors=FALSE)
dat1[,"date"] = as.Date(dat1[,"date"], format="%Y-%m-%d")
dat1
fnm = "/actual-vs-predict.png"
full_path = paste(home, fnm, sep="")
full_path
png(full_path, width=680, height=480)
par(mar = c(5,5,5,5))
with(dat1, plot(date, delta, type="b", col="black", pch=16, cex=2, xaxt="n",
xlab="Date", ylab="Delta", ylim=c(-1700,0)))
title(main="Fig. 1 Actual Infected Cases minus Model Prediction")
mtext(text="negative ==> actual less than prediction", side=3, line=1)
axis(1, dat1$date, format(dat1$date, "%b %d"), cex.axis=1 )
par(new = T)
with(dat1, plot(date, delta_pct, type="b", col="red3", pch=1,
axes=F, xlab=NA, ylab=NA, cex=2, ylim=c(-16,0)))
axis(side = 4)
mtext(side = 4, line = 3, 'percentage')
legend("topleft",
legend=c("Delta", "percent"),
lty=c(1,1), pch=c(16, 1), col=c("black", "red3"))
dev.off()
png(full_path, width=680, height=480)
par(mar = c(5,5,5,5))
with(dat1, plot(date, delta, type="b", col="black", pch=16, cex=2, xaxt="n",
xlab="Date", ylab="Delta", ylim=c(-1800,0)))
title(main="Fig. 1 Actual Infected Cases minus Model Prediction")
mtext(text="negative ==> actual less than prediction", side=3, line=1)
axis(1, dat1$date, format(dat1$date, "%b %d"), cex.axis=1 )
par(new = T)
with(dat1, plot(date, delta_pct, type="b", col="red3", pch=1,
axes=F, xlab=NA, ylab=NA, cex=2, ylim=c(-16,0)))
axis(side = 4)
mtext(side = 4, line = 3, 'percentage')
legend("topleft",
legend=c("Delta", "percent"),
lty=c(1,1), pch=c(16, 1), col=c("black", "red3"))
dev.off()
dat1
sapply(dat1, class)
dat1 = read.csv(full_path, header=TRUE, stringsAsFactors=FALSE)
dat1 = read.csv(full_path, header=TRUE, stringsAsFactors=FALSE)
dat1 = read.csv(full_path, header=TRUE, stringsAsFactors=FALSE)
full_path
csv_file = "actual-vs-predict.csv"
full_path = paste(data_path, csv_file, sep="")
full_path
dat1 = read.csv(full_path, header=TRUE, stringsAsFactors=FALSE)
dat1[,"date"] = as.Date(dat1[,"date"], format="%Y-%m-%d")
dat1
fnm = "/actual-vs-predict.png"
full_path = paste(home, fnm, sep="")
png(full_path, width=680, height=480)
par(mar = c(5,5,5,5))
with(dat1, plot(date, delta, type="b", col="black", pch=16, cex=2, xaxt="n",
xlab="Date", ylab="Delta", ylim=c(-1800,0)))
title(main="Fig. 1 Actual Infected Cases minus Model Prediction")
mtext(text="negative ==> actual less than prediction", side=3, line=1)
axis(1, dat1$date, format(dat1$date, "%b %d"), cex.axis=1 )
par(new = T)
with(dat1, plot(date, delta_pct, type="b", col="red3", pch=1,
axes=F, xlab=NA, ylab=NA, cex=2, ylim=c(-16,0)))
axis(side = 4)
mtext(side = 4, line = 3, 'percentage')
legend("topleft",
legend=c("Delta", "percent"),
lty=c(1,1), pch=c(16, 1), col=c("black", "red3"))
dev.off()
getwd()
if ( file.exists("CoronaV.RData") ) load("CoronaV.RData")
rm(data_path, plot_path, csv_file, dat, model, last.t, latest.date)
ls()
Daily_updates
forecast.df
Forecast
today = Sys.Date()
today.ch = as.character(today)
home = getwd()
data_path = paste(home,  "/data/", sep="")
plot_path = paste(home,  "/plots/", sep="")
csv_file = "actual-vs-predict.csv"
full_path = paste(data_path, csv_file, sep="")
dat1 = read.csv(full_path, header=TRUE, stringsAsFactors=FALSE)
dat1[,"date"] = as.Date(dat1[,"date"], format="%Y-%m-%d")
dat1
fnm = "/actual-vs-predict.png"
full_path = paste(home, fnm, sep="")
png(full_path, width=680, height=480)
par(mar = c(5,5,5,5))
with(dat1, plot(date, delta, type="b", col="black", pch=16, cex=2, xaxt="n",
xlab="Date", ylab="Delta", ylim=c(-1800,0)))
title(main="Fig. 1 Actual Infected Cases minus Model Prediction")
mtext(text="negative ==> actual less than prediction", side=3, line=1)
axis(1, dat1$date, format(dat1$date, "%b %d"), cex.axis=1 )
par(new = T)
with(dat1, plot(date, delta_pct, type="b", col="red3", pch=1,
axes=F, xlab=NA, ylab=NA, cex=2, ylim=c(-16,0)))
axis(side = 4)
mtext(side = 4, line = 3, 'percentage')
legend("topleft",
legend=c("Delta", "percent"),
lty=c(1,1), pch=c(16, 1), col=c("black", "red3"))
dev.off()
Model_param
