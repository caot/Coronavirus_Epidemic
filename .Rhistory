home = getwd()
home
data_path = paste(home,  "/data", sep="")
data_path
csv_file = "corona_data.csv"
full_path = paste(data_path, "/", csv_file, sep="")
full_path
dat = read.csv(full_path, header=TRUE, stringsAsFactors=FALSE)
dat = dat[9:nrow(dat),]
dat[,"t"] = 1:nrow(dat)
dat[,"date"] = as.Date(dat[,"date"], format="%Y-%m-%d")
dat
sapply(dat, class)
# ==== Estimate initial parameters ===================================
# Initial intercept must be less than min(y) and greater than zero
init_intcpt = min(dat[,"confirmed"]) / 2
# Estimate other parameters using a linear model
model0 = lm(log(confirmed - init_intcpt)~t, data=dat)
alpha0 = exp(coef(model0)[1])
beta0 = coef(model0)[2]
(init_param = list(alpha=alpha0, beta=beta0, intcpt=init_intcpt))
# ==== Fit non-linear regression ==============================================
model = nls(confirmed ~ alpha*exp(beta*t) + intcpt , data=dat, start=init_param)
res = summary(model)
res
date()
Date()
date()
format(date(), "%m-%d-%Y")
class(date())
Sys.Date()
class(Sys.Date())
today = Sys.Date()
today.ch = as.character(today)
today.ch
# ==== Plot ==========================================
fnm = paste("daily-prediction-", today.ch, sep="")
fnm
# ==== Plot ==========================================
fnm = paste("daily-prediction-", today.ch, ".png",  sep="")
fnm
full_path = paste(plot_path, fnm, sep="")
home = getwd()
data_path = paste(home,  "/data/", sep="")
plot_path = paste(home,  "/plots/", sep="")
full_path = paste(plot_path, fnm, sep="")
full_path
?save
exists(dat)
exists("dat")
exists("sfsdfad")
res
res$coefficients
Param = list()
Param[[1]] = res
length(Param)
Param[[2]] = res
length(Param)
Param[[2]]
summary(Param[[2]])
res
summary(model)
str(summary(model))
res$coefficients
res$coefficients[,1]
param_table=NULL
param_table = rbind(param_table, res$coefficients[,1])
param_table
exists("Param")
if ( !exists("param_table") ) param_table = NULL
param_table = rbind(param_table, res$coefficients[,1])
param_table
today.ch
xx = list()
length(xx)
if ( !exists("daily_table") ) daily_table = NULL
daily_table = rbind(daily_table, res$coefficients[,1])
rownames(daily_table)[nrow(daily_table)] = today.ch
daily_table
# ==== Prediction =================================
last.t = tail(dat[,"t"],1)
last.t
dat
save.iamge("CoronaV.RData")
save.image("CoronaV.RData")
dat
forecast.df = data.frame(matrix(NA, nrow=nrow(dat), ncol=ncol(dat)))
forecast.df
colnames(forecast.df) = colnames(dat)
forecast.df
forecast.df = data.frame(matrix(NA, nrow=3, ncol=ncol(dat)))
colnames(forecast.df) = colnames(dat)
forecast.df
forecast.df[1,"date"] = tail(dat[,"date"],1) + 1
forecast.df[2,"date"] = tail(dat[,"date"],1) + 2
forecast.df[3,"date"] = tail(dat[,"date"],1) + 3
forecast.df[,"date"] = as.Date(test.df[,"date"], origin="1970-01-01")
forecast.df[,"date"] = as.Date(forecast.df[,"date"], origin="1970-01-01")
forecast.df
forecast.df[,"t"] = (tail(dat[,"t"],1)+1):(tail(dat[,"t"],1)+1)
forecast.df
forecast.df[,"t"] = (tail(dat[,"t"],1)+1):(tail(dat[,"t"],1)+3)
forecast.df
tail(dat)
pred = predict(model, newdata=forecast.df, se.fit = TRUE, level=0.95)
pred
today = Sys.Date()
today.ch = as.character(today)
home = getwd()
data_path = paste(home,  "/data/", sep="")
plot_path = paste(home,  "/plots/", sep="")
if ( exists("CoronaV.RData") ) load("CoronaV.RData")
csv_file = "corona_data.csv"
full_path = paste(data_path, csv_file, sep="")
# override dat with the latest data
dat = read.csv(full_path, header=TRUE, stringsAsFactors=FALSE)
dat = dat[9:nrow(dat),]
dat[,"t"] = 1:nrow(dat)
dat[,"date"] = as.Date(dat[,"date"], format="%Y-%m-%d")
cat("====== Data ============================ \n")
dat
# ==== Estimate starting parameters ===================================
# Initial intercept must be less than min(y) and greater than zero
init_intcpt = min(dat[,"confirmed"]) / 2
# Estimate other parameters using a linear model
model0 = lm(log(confirmed - init_intcpt)~t, data=dat)
alpha0 = exp(coef(model0)[1])
beta0 = coef(model0)[2]
init_param = list(alpha=alpha0, beta=beta0, intcpt=init_intcpt)
cat("===== Starting parameters =============================== \n")
init_param
# ==== Fit model ==============================================
model = nls(confirmed ~ alpha*exp(beta*t) + intcpt , data=dat, start=init_param)
res = summary(model)
cat("===== Model summary ====================================== \n")
res
if ( !exists("Model_param") ) Model_param = list()
Model_param[[length(Model_param)+1]] = res
Model_param
if ( !exists("Daily_updates") ) Daily_updates = NULL
Daily_updates = rbind(Daily_updates, res$coefficients[,1])
rownames(Daily_updates)[nrow(Daily_updates)] = today.ch
Daily_updates
rownames(Daily_updates)[nrow(Daily_updates)] = as.character(dat[nrow(dat), "date"])
Daily_updates
# ==== Prediction =================================
last.t = tail(dat[,"t"],1)
last.t
forecast.df = data.frame(matrix(NA, nrow=3, ncol=ncol(dat)))
colnames(forecast.df) = colnames(dat)
dte = dat[nrow(dat), "date"]
dte
class(dte)
dte + 1:3
dte = dat[nrow(dat), "date"] + 1:3
dte
forecast.df[1:3,"date"] = dte
forecast.df
forecast.df[,"date"] = as.Date(forecast.df[,"date"], origin="1970-01-01")
forecast.df
last.t
last.t + 1:3
forecast.df[,"t"] = last.t + 1:3
forecast.df
pred = predict(model, newdata=forecast.df, se.fit = TRUE, level=0.95)
pred
forecast.df[,"confirmed"] = pred
forecast.df
df = rbind(dat, forecast.df)
df
latest.date = as.character(dat[nrow(dat), "date"])
latest.date
Daily_updates
# ==== Plot ==========================================
fnm = paste("daily-prediction-", latest.date, ".png",  sep="")
full_path = paste(plot_path, fnm, sep="")
full_path
fnm
png(full_path)
plot(df[,"t"], df[,"confirmed"], type="b",
xlab="Date", ylab="No of confirmed cases",
main="Coronvirus confirmed cases vs prediction")
abline(v=last.t, col="grey", lwd=2)
grid(NA, 10, lwd = 2)
text(x=last.t, y=100, labels="yesterday", pos=2, col="blue", cex=1)
text(x=1, y=c(15000, 13500, 12000), labels=c("Today : 8,884", "Thur : 12,912", "Fri : 18,757"), pos=4, col="red", cex=2)
dev.off()
df
forecast.df
hgt = max(df[,"confirmed"])
hgt
txt = c(paste("Today's prediction : ", forecast.df[1,"confirmed"]), paste("Tomorrow's : ", forecast.df[2,"confirmed"]))
txt
txt = c(paste("Today's prediction : ", round(forecast.df[1,"confirmed"]),0), paste("Tomorrow's : ", round(forecast.df[2,"confirmed"],0))
txt = c(paste("Today's prediction : ", round(forecast.df[1,"confirmed"]),0), paste("Tomorrow's : ", round(forecast.df[2,"confirmed"],0)))
txt
txt = c(paste("Today's prediction : ", round(forecast.df[1,"confirmed"],0)), paste("Tomorrow's : ", round(forecast.df[2,"confirmed"],0)))
txt
# ==== Plot ==========================================
fnm = paste("daily-prediction-", latest.date, ".png",  sep="")
full_path = paste(plot_path, fnm, sep="")
png(full_path)
plot(df[,"t"], df[,"confirmed"], type="b",
xlab="Date", ylab="No of confirmed cases",
main="Coronvirus confirmed cases vs prediction")
abline(v=last.t, col="grey", lwd=2)
grid(NA, 10, lwd = 2)
text(x=last.t, y=100, labels=latest.date, pos=2, col="blue", cex=1)
txt = c(paste("Today's prediction : ", round(forecast.df[1,"confirmed"],0)), paste("Tomorrow's : ", round(forecast.df[2,"confirmed"],0)))
hgt = max(df[,"confirmed"])
text(x=1, y=c(hgt*0.9, hgt*0.75), labels=txt, pos=4, col="red", cex=2)
dev.off()
png(full_path)
plot(df[,"t"], df[,"confirmed"], type="b",
xlab="Date", ylab="No of confirmed cases",
main="Coronvirus confirmed cases vs prediction")
abline(v=last.t, col="grey", lwd=2)
grid(NA, 10, lwd = 2)
text(x=last.t, y=100, labels=latest.date, pos=3, col="blue", cex=1)
txt = c(paste("Today's prediction : ", round(forecast.df[1,"confirmed"],0)), paste("Tomorrow's : ", round(forecast.df[2,"confirmed"],0)))
hgt = max(df[,"confirmed"])
text(x=1, y=c(hgt*0.9, hgt*0.8), labels=txt, pos=4, col="red", cex=2)
dev.off()
png(full_path)
plot(df[,"t"], df[,"confirmed"], type="b",
xlab="Date", ylab="No of confirmed cases",
main="Coronvirus confirmed cases vs prediction")
abline(v=last.t, col="grey", lwd=2)
grid(NA, 10, lwd = 2)
text(x=last.t, y=100, labels=latest.date, pos=3, col="blue", cex=1)
txt = c(paste("Today : ", round(forecast.df[1,"confirmed"],0)), paste("Tomorrow : ", round(forecast.df[2,"confirmed"],0)))
hgt = max(df[,"confirmed"])
text(x=1, y=c(hgt*0.9, hgt*0.8), labels=txt, pos=4, col="red", cex=2)
dev.off()
# save everything to RData file
save.image("CoronaV.RData")
forecast.df
latest.date
png(full_path)
plot(df[,"t"], df[,"confirmed"], type="b",
xlab="Date", ylab="No of confirmed cases",
main="Coronvirus confirmed cases vs prediction")
abline(v=last.t, col="grey", lwd=2)
grid(NA, 10, lwd = 2)
text(x=last.t, y=100, labels=latest.date, pos=3, col="blue", cex=1)
txt = c(paste(as.character(forecast.df[1,"date"]), round(forecast.df[1,"confirmed"],0), sep=":"),
paste(as.character(forecast.df[2,"date"]), round(forecast.df[2,"confirmed"],0), sep=":"))
hgt = max(df[,"confirmed"])
text(x=1, y=c(hgt*0.9, hgt*0.8), labels=txt, pos=4, col="red", cex=2)
dev.off()
png(full_path)
plot(df[,"t"], df[,"confirmed"], type="b",
xlab="Date", ylab="No of confirmed cases",
main="Coronvirus confirmed cases vs prediction")
abline(v=last.t, col="grey", lwd=2)
grid(NA, 10, lwd = 2)
text(x=last.t, y=100, labels=latest.date, pos=3, col="blue", cex=1)
txt = c(paste(as.character(forecast.df[1,"date"]), round(forecast.df[1,"confirmed"],0), sep=" : "),
paste(as.character(forecast.df[2,"date"]), round(forecast.df[2,"confirmed"],0), sep=" : "))
hgt = max(df[,"confirmed"])
text(x=1, y=c(hgt*0.9, hgt*0.8), labels=txt, pos=4, col="red", cex=2)
dev.off()
today = Sys.Date()
today.ch = as.character(today)
home = getwd()
data_path = paste(home,  "/data/", sep="")
plot_path = paste(home,  "/plots/", sep="")
if ( exists("CoronaV.RData") ) load("CoronaV.RData")
ls()
getwd()
if ( file.exists("CoronaV.RData") ) load("CoronaV.RData")
ls()
Daily_updates
if ( file.exists("CoronaV.RData") ) load("CoronaV.RData")
ls()
Daily_updates
fnm = paste("Beta-history.png",  sep="")
full_path = paste(plot_path, fnm, sep="")
full_path
png(full_path)
par(mfrow=c(1,3))
dte = as.Date(rownames(Daily_updates))
plot(dte, Daily_updates[,"beta"], type="b",
xlab="Date", ylab="beta",
main="Ave rate of infection per unit time (Beta)")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"alpha"], type="b",
xlab="Date", ylab="alpha",
main="Alpha")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"intcpt"], type="b",
xlab="Date", ylab="Intercept",
main="Intercept")
grid(NA, 10, lwd = 1)
dev.off()
?png
fnm = paste("Beta-history.png",  sep="")
full_path = paste(plot_path, fnm, sep="")
png(full_path, width=1080, height=480)
par(mfrow=c(1,3))
dte = as.Date(rownames(Daily_updates))
plot(dte, Daily_updates[,"beta"], type="b",
xlab="Date", ylab="beta",
main="Ave rate of infection per unit time (Beta)")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"alpha"], type="b",
xlab="Date", ylab="alpha",
main="Alpha")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"intcpt"], type="b",
xlab="Date", ylab="Intercept",
main="Intercept")
grid(NA, 10, lwd = 1)
dev.off()
?as.Date
dte = as.Date(rownames(Daily_updates), format="%m-%d")
dte
dte = as.Date(rownames(Daily_updates))
dte
fnm = paste("Beta-history.png",  sep="")
full_path = paste(plot_path, fnm, sep="")
png(full_path, width=1080, height=480)
par(mfrow=c(1,3))
dte = rownames(Daily_updates)
plot(dte, Daily_updates[,"beta"], type="b",
xlab="Date", ylab="beta",
main="Ave rate of infection per unit time (Beta)")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"alpha"], type="b",
xlab="Date", ylab="alpha",
main="Alpha")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"intcpt"], type="b",
xlab="Date", ylab="Intercept",
main="Intercept")
grid(NA, 10, lwd = 1)
dev.off()
dte = as.Date(rownames(Daily_updates))
dte
format(dte, "%m-%d")
class(format(dte, "%m-%d"))
fnm = paste("Beta-history.png",  sep="")
full_path = paste(plot_path, fnm, sep="")
png(full_path, width=1080, height=480)
par(mfrow=c(1,3))
dte = as.Date(rownames(Daily_updates))
plot(dte, Daily_updates[,"beta"], type="b",
xlab="Date", ylab="beta",
main="Ave rate of infection per unit time (Beta)")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"alpha"], type="b",
xlab="Date", ylab="alpha",
main="Alpha")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"intcpt"], type="b",
xlab="Date", ylab="Intercept",
main="Intercept")
grid(NA, 10, lwd = 1)
dev.off()
?plot
fnm = paste("Beta-history.png",  sep="")
full_path = paste(plot_path, fnm, sep="")
png(full_path, width=1080, height=480)
par(mfrow=c(1,3))
dte = as.Date(rownames(Daily_updates))
plot(dte, Daily_updates[,"beta"], type="b", cex=3,
xlab="Date", ylab="beta",
main="Ave rate of infection per unit time (Beta)")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"alpha"], type="b",  cex=3,
xlab="Date", ylab="alpha",
main="Alpha")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"intcpt"], type="b",  cex=3,
xlab="Date", ylab="Intercept",
main="Intercept")
grid(NA, 10, lwd = 1)
dev.off()
png(full_path, width=1080, height=480)
par(mfrow=c(1,3))
dte = as.Date(rownames(Daily_updates))
plot(dte, Daily_updates[,"beta"], type="b", cex=3, bg="red",
xlab="Date", ylab="beta",
main="Ave rate of infection per unit time (Beta)")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"alpha"], type="b",  cex=3,
xlab="Date", ylab="alpha",
main="Alpha")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"intcpt"], type="b",  cex=3,
xlab="Date", ylab="Intercept",
main="Intercept")
grid(NA, 10, lwd = 1)
dev.off()
png(full_path, width=1080, height=480)
par(mfrow=c(1,3))
dte = as.Date(rownames(Daily_updates))
plot(dte, Daily_updates[,"beta"], type="b", cex=5, bg="red", col="red",
xlab="Date", ylab="beta",
main="Ave rate of infection per unit time (Beta)")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"alpha"], type="b",  cex=5, col="red",
xlab="Date", ylab="alpha",
main="Alpha")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"intcpt"], type="b",  cex=5, col="red",
xlab="Date", ylab="Intercept",
main="Intercept")
grid(NA, 10, lwd = 1)
dev.off()
fnm = paste("Beta-history.png",  sep="")
full_path = paste(plot_path, fnm, sep="")
png(full_path, width=1080, height=480)
par(mfrow=c(1,3))
dte = as.Date(rownames(Daily_updates))
plot(dte, Daily_updates[,"beta"], type="b", cex=5, bg="red", col="red",
xlab="Date", ylab="beta",
main="Rate of Infection (Beta)")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"alpha"], type="b",  cex=5, col="red",
xlab="Date", ylab="alpha",
main="Alpha")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"intcpt"], type="b",  cex=5, col="red",
xlab="Date", ylab="Intercept",
main="Intercept")
grid(NA, 10, lwd = 1)
dev.off()
png(full_path, width=1080, height=480)
par(mfrow=c(1,3))
dte = as.Date(rownames(Daily_updates))
plot(dte, Daily_updates[,"beta"], type="b", cex=5, bg="red", col="red", pch=21,
xlab="Date", ylab="beta",
main="Rate of Infection (Beta)")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"alpha"], type="b",  cex=5, col="red", pch=22,
xlab="Date", ylab="alpha",
main="Alpha")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"intcpt"], type="b",  cex=5, col="red", pch=23,
xlab="Date", ylab="Intercept",
main="Intercept")
grid(NA, 10, lwd = 1)
dev.off()
png(full_path, width=1080, height=480)
par(mfrow=c(1,3))
dte = as.Date(rownames(Daily_updates))
plot(dte, Daily_updates[,"beta"], type="b", cex=5, bg="red", col="black", lwd=3, pch=21,
xlab="Date", ylab="beta",
main="Rate of Infection (Beta)")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"alpha"], type="b",  cex=5, bg="blue", col="red", lwd=3, pch=24,
xlab="Date", ylab="alpha",
main="Alpha")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"intcpt"], type="b",  cex=5, bg="green", col="red", lwd=3, pch=25,
xlab="Date", ylab="Intercept",
main="Intercept")
grid(NA, 10, lwd = 1)
dev.off()
png(full_path, width=1080, height=480)
par(mfrow=c(1,3))
dte = as.Date(rownames(Daily_updates))
plot(dte, Daily_updates[,"beta"], type="b", cex=5, bg="red", col="black", lwd=3, pch=21,
xlab="Date", ylab="beta",
main="Rate of Infection (Beta)")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"alpha"], type="b",  cex=5, bg="blue", col="red", lwd=3, pch=22,
xlab="Date", ylab="alpha",
main="Alpha")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"intcpt"], type="b",  cex=5, bg="green", col="red", lwd=3, pch=25,
xlab="Date", ylab="Intercept",
main="Intercept")
grid(NA, 10, lwd = 1)
dev.off()
fnm = paste("Beta-history.png",  sep="")
full_path = paste(plot_path, fnm, sep="")
png(full_path, width=1080, height=480)
par(mfrow=c(1,3))
dte = as.Date(rownames(Daily_updates))
plot(dte, Daily_updates[,"beta"], type="b", cex=5, bg="red", col="black", lwd=3, pch=21,
xlab="Date", ylab="beta",
main="Rate of Infection (Beta)")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"alpha"], type="b",  cex=5, bg="blue", col="black", lwd=3, pch=22,
xlab="Date", ylab="alpha",
main="Alpha")
grid(NA, 10, lwd = 1)
plot(dte, Daily_updates[,"intcpt"], type="b",  cex=5, bg="green", col="black", lwd=3, pch=25,
xlab="Date", ylab="Intercept",
main="Intercept")
grid(NA, 10, lwd = 1)
dev.off()
